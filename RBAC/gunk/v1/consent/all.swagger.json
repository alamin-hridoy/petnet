{
  "swagger": "2.0",
  "info": {
    "title": "brank.as/rbac/gunk/v1/consent/all.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "GrantService"
    },
    {
      "name": "ScopeService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/consent": {
      "get": {
        "summary": "Get consent request details.",
        "description": "Prepare a consent request for user grant.\n\t   \tUsed by consent provider for displaying to a user.",
        "operationId": "GrantService_ServeGrant",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/consentServeGrantResponse"
            }
          },
          "400": {
            "description": "Returned when request is incorrect or malformed.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "description": "User unique identifier.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "client_id",
            "description": "Authentication client identifier.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner_id",
            "description": "Authentication client owner identifier.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requested",
            "description": "New scope grants requested by client.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "granted",
            "description": "Scopes previously granted to client by user.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Consent Grant"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "User Consent Grant.",
        "description": "Record user consent grant.",
        "operationId": "GrantService_Grant",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/consentGrantResponse"
            }
          },
          "400": {
            "description": "Returned when request is incorrect or malformed.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/consentGrantRequest"
            }
          }
        ],
        "tags": [
          "Consent Grant"
        ]
      }
    },
    "/v1/scope": {
      "get": {
        "summary": "Get scope details.",
        "description": "Get scope details and descriptions, along with groupings for display.",
        "operationId": "ScopeService_GetScope",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/consentGetScopeResponse"
            }
          },
          "400": {
            "description": "Returned when request is incorrect or malformed.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Scopes"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "Upsert consent scope.",
        "description": "Insert or update a consent grant scope.",
        "operationId": "ScopeService_UpsertScope",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/consentUpsertScopeResponse"
            }
          },
          "400": {
            "description": "Returned when request is incorrect or malformed.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/consentUpsertScopeRequest"
            }
          }
        ],
        "tags": [
          "Scopes"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "Update scope group.",
        "description": "Update a consent grant scope group.\n\t   \tScope groups are used to display user consent requests in\n\t\tlogical groupings, while allowing detailed display of individual scopes.",
        "operationId": "ScopeService_UpdateGroup",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/consentUpsertScopeResponse"
            }
          },
          "400": {
            "description": "Returned when request is incorrect or malformed.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/consentUpdateGroupRequest"
            }
          }
        ],
        "tags": [
          "Scopes"
        ],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "consentGetScopeResponse": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/consentScopeDetail"
          }
        },
        "groups": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/consentGroupDetail"
          }
        }
      }
    },
    "consentGrantRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "User unique identifier."
        },
        "client_id": {
          "type": "string",
          "description": "Authentication client identifier."
        },
        "owner_id": {
          "type": "string",
          "description": "Authentication client owner identifier."
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User-granted scopes requested by client."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Recorded timestamp of user consent grant."
        }
      }
    },
    "consentGrantResponse": {
      "type": "object",
      "properties": {
        "grant_id": {
          "type": "string",
          "description": "Unique consent grant identifier."
        },
        "remember": {
          "type": "boolean",
          "description": "Single grants are not remembered for future consent requests by the same client."
        },
        "grants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User consent grants recorded."
        }
      }
    },
    "consentGroupDetail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "consentScopeDetail": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "consentServeGrantResponse": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/consentScopeDetail"
          },
          "description": "Scope requests not previously granted."
        },
        "granted_scopes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/consentScopeDetail"
          },
          "description": "Previously granted scopes."
        },
        "groups": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/consentGroupDetail"
          },
          "description": "Grouping details for all of the requested scopes."
        },
        "skip": {
          "type": "boolean",
          "description": "Skip explicit consent grant.  Used to mark first-party logins."
        },
        "org_id": {
          "type": "string",
          "description": "OrgID requesting the consent."
        },
        "org_name": {
          "type": "string",
          "description": "Organization name requesting consent."
        }
      }
    },
    "consentUpdateGroupRequest": {
      "type": "object",
      "properties": {
        "group_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "consentUpdateGroupResponse": {
      "type": "object",
      "properties": {
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "consentUpsertScopeRequest": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "group_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "consentUpsertScopeResponse": {
      "type": "object",
      "properties": {
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
