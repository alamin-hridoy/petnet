// source: all.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.ClientConfig', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.ClientType', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.CreateClientRequest', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.CreateClientResponse', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.DisableClientRequest', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.DisableClientResponse', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.ListClientsRequest', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.ListClientsResponse', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.Oauth2Client', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.UpdateClientRequest', null, global);
goog.exportSymbol('proto.brankas.rbac.v1.oauth2.UpdateClientResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brankas.rbac.v1.oauth2.CreateClientRequest.repeatedFields_, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.CreateClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.CreateClientRequest.displayName = 'proto.brankas.rbac.v1.oauth2.CreateClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.ClientConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.ClientConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.ClientConfig.displayName = 'proto.brankas.rbac.v1.oauth2.ClientConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.CreateClientResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.CreateClientResponse.displayName = 'proto.brankas.rbac.v1.oauth2.CreateClientResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brankas.rbac.v1.oauth2.UpdateClientRequest.repeatedFields_, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.UpdateClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.UpdateClientRequest.displayName = 'proto.brankas.rbac.v1.oauth2.UpdateClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.UpdateClientResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.UpdateClientResponse.displayName = 'proto.brankas.rbac.v1.oauth2.UpdateClientResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.ListClientsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.ListClientsRequest.displayName = 'proto.brankas.rbac.v1.oauth2.ListClientsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brankas.rbac.v1.oauth2.Oauth2Client.repeatedFields_, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.Oauth2Client, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.Oauth2Client.displayName = 'proto.brankas.rbac.v1.oauth2.Oauth2Client';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brankas.rbac.v1.oauth2.ListClientsResponse.repeatedFields_, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.ListClientsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.ListClientsResponse.displayName = 'proto.brankas.rbac.v1.oauth2.ListClientsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.DisableClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.DisableClientRequest.displayName = 'proto.brankas.rbac.v1.oauth2.DisableClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brankas.rbac.v1.oauth2.DisableClientResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brankas.rbac.v1.oauth2.DisableClientResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brankas.rbac.v1.oauth2.DisableClientResponse.displayName = 'proto.brankas.rbac.v1.oauth2.DisableClientResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.repeatedFields_ = [5,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.CreateClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    audience: jspb.Message.getFieldWithDefault(msg, 11, ""),
    env: jspb.Message.getFieldWithDefault(msg, 2, ""),
    role: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clienttype: jspb.Message.getFieldWithDefault(msg, 4, 0),
    corsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    logourl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    scopesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    redirecturlList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    logoutredirecturl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    identitysource: jspb.Message.getFieldWithDefault(msg, 10, ""),
    config: (f = msg.getConfig()) && proto.brankas.rbac.v1.oauth2.ClientConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.CreateClientRequest;
  return proto.brankas.rbac.v1.oauth2.CreateClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAudience(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnv(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 4:
      var value = /** @type {!proto.brankas.rbac.v1.oauth2.ClientType} */ (reader.readEnum());
      msg.setClienttype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCors(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogourl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addScopes(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addRedirecturl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoutredirecturl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentitysource(value);
      break;
    case 12:
      var value = new proto.brankas.rbac.v1.oauth2.ClientConfig;
      reader.readMessage(value,proto.brankas.rbac.v1.oauth2.ClientConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.CreateClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAudience();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getEnv();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClienttype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getLogourl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getRedirecturlList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getLogoutredirecturl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIdentitysource();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.brankas.rbac.v1.oauth2.ClientConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Audience = 11;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getAudience = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setAudience = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string Env = 2;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getEnv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setEnv = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Role = 3;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ClientType ClientType = 4;
 * @return {!proto.brankas.rbac.v1.oauth2.ClientType}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getClienttype = function() {
  return /** @type {!proto.brankas.rbac.v1.oauth2.ClientType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.brankas.rbac.v1.oauth2.ClientType} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setClienttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated string CORS = 5;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getCorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setCorsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.addCors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.clearCorsList = function() {
  return this.setCorsList([]);
};


/**
 * optional string LogoURL = 6;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getLogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setLogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string Scopes = 7;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getScopesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setScopesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.addScopes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.clearScopesList = function() {
  return this.setScopesList([]);
};


/**
 * repeated string RedirectURL = 8;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getRedirecturlList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setRedirecturlList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.addRedirecturl = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.clearRedirecturlList = function() {
  return this.setRedirecturlList([]);
};


/**
 * optional string LogoutRedirectURL = 9;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getLogoutredirecturl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setLogoutredirecturl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string IdentitySource = 10;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getIdentitysource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setIdentitysource = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional ClientConfig Config = 12;
 * @return {?proto.brankas.rbac.v1.oauth2.ClientConfig}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.getConfig = function() {
  return /** @type{?proto.brankas.rbac.v1.oauth2.ClientConfig} */ (
    jspb.Message.getWrapperField(this, proto.brankas.rbac.v1.oauth2.ClientConfig, 12));
};


/**
 * @param {?proto.brankas.rbac.v1.oauth2.ClientConfig|undefined} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
*/
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.CreateClientRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.ClientConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.ClientConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    logintemplate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    otptemplate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consenttemplate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    forceconsent: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    sessionduration: (f = msg.getSessionduration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    identitysource: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.ClientConfig;
  return proto.brankas.rbac.v1.oauth2.ClientConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.ClientConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogintemplate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtptemplate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsenttemplate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceconsent(value);
      break;
    case 5:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setSessionduration(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentitysource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.ClientConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.ClientConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogintemplate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOtptemplate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConsenttemplate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getForceconsent();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSessionduration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getIdentitysource();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string LoginTemplate = 1;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.getLogintemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig} returns this
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.setLogintemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string OTPTemplate = 2;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.getOtptemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig} returns this
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.setOtptemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ConsentTemplate = 3;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.getConsenttemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig} returns this
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.setConsenttemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool ForceConsent = 4;
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.getForceconsent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig} returns this
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.setForceconsent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Duration SessionDuration = 5;
 * @return {?proto.google.protobuf.Duration}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.getSessionduration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 5));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig} returns this
*/
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.setSessionduration = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig} returns this
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.clearSessionduration = function() {
  return this.setSessionduration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.hasSessionduration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string IdentitySource = 6;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.getIdentitysource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.ClientConfig} returns this
 */
proto.brankas.rbac.v1.oauth2.ClientConfig.prototype.setIdentitysource = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.CreateClientResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.CreateClientResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientResponse}
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.CreateClientResponse;
  return proto.brankas.rbac.v1.oauth2.CreateClientResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.CreateClientResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientResponse}
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.CreateClientResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.CreateClientResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ClientID = 1;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientResponse} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Secret = 2;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.CreateClientResponse} returns this
 */
proto.brankas.rbac.v1.oauth2.CreateClientResponse.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.repeatedFields_ = [3,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.UpdateClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    corsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    logourl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scopesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    redirecturlList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    logoutredirecturl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    config: (f = msg.getConfig()) && proto.brankas.rbac.v1.oauth2.ClientConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.UpdateClientRequest;
  return proto.brankas.rbac.v1.oauth2.UpdateClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCors(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogourl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addScopes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addRedirecturl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoutredirecturl(value);
      break;
    case 8:
      var value = new proto.brankas.rbac.v1.oauth2.ClientConfig;
      reader.readMessage(value,proto.brankas.rbac.v1.oauth2.ClientConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.UpdateClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getLogourl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getRedirecturlList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getLogoutredirecturl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.brankas.rbac.v1.oauth2.ClientConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ClientID = 1;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string CORS = 3;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getCorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setCorsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.addCors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.clearCorsList = function() {
  return this.setCorsList([]);
};


/**
 * optional string LogoURL = 4;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getLogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setLogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string Scopes = 5;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getScopesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setScopesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.addScopes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.clearScopesList = function() {
  return this.setScopesList([]);
};


/**
 * repeated string RedirectURL = 6;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getRedirecturlList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setRedirecturlList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.addRedirecturl = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.clearRedirecturlList = function() {
  return this.setRedirecturlList([]);
};


/**
 * optional string LogoutRedirectURL = 7;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getLogoutredirecturl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setLogoutredirecturl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ClientConfig Config = 8;
 * @return {?proto.brankas.rbac.v1.oauth2.ClientConfig}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.getConfig = function() {
  return /** @type{?proto.brankas.rbac.v1.oauth2.ClientConfig} */ (
    jspb.Message.getWrapperField(this, proto.brankas.rbac.v1.oauth2.ClientConfig, 8));
};


/**
 * @param {?proto.brankas.rbac.v1.oauth2.ClientConfig|undefined} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
*/
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.UpdateClientResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.UpdateClientResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientResponse}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.UpdateClientResponse;
  return proto.brankas.rbac.v1.oauth2.UpdateClientResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.UpdateClientResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientResponse}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.UpdateClientResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.UpdateClientResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp Updated = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientResponse} returns this
*/
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brankas.rbac.v1.oauth2.UpdateClientResponse} returns this
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.UpdateClientResponse.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.ListClientsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.ListClientsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    env: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orgid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    listdisable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsRequest}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.ListClientsRequest;
  return proto.brankas.rbac.v1.oauth2.ListClientsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.ListClientsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsRequest}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnv(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgid(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setListdisable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.ListClientsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.ListClientsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnv();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrgid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getListdisable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string ClientID = 1;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Env = 2;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.getEnv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.setEnv = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string OrgID = 3;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.getOrgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.setOrgid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool ListDisable = 4;
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.getListdisable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.ListClientsRequest.prototype.setListdisable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.Oauth2Client.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.Oauth2Client} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    env: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orgid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    logourl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scopesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    redirecturlList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    logoutredirecturl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    creator: jspb.Message.getFieldWithDefault(msg, 8, ""),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    disabled: (f = msg.getDisabled()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.brankas.rbac.v1.oauth2.ClientConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.Oauth2Client;
  return proto.brankas.rbac.v1.oauth2.Oauth2Client.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.Oauth2Client} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnv(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogourl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addScopes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addRedirecturl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoutredirecturl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDisabled(value);
      break;
    case 11:
      var value = new proto.brankas.rbac.v1.oauth2.ClientConfig;
      reader.readMessage(value,proto.brankas.rbac.v1.oauth2.ClientConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.Oauth2Client.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.Oauth2Client} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnv();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrgid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLogourl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getRedirecturlList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getLogoutredirecturl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDisabled();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.brankas.rbac.v1.oauth2.ClientConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Env = 2;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getEnv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setEnv = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string OrgID = 12;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getOrgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setOrgid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string ClientID = 3;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string LogoURL = 4;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getLogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setLogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string Scopes = 5;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getScopesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setScopesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.addScopes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.clearScopesList = function() {
  return this.setScopesList([]);
};


/**
 * repeated string RedirectURL = 6;
 * @return {!Array<string>}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getRedirecturlList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setRedirecturlList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.addRedirecturl = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.clearRedirecturlList = function() {
  return this.setRedirecturlList([]);
};


/**
 * optional string LogoutRedirectURL = 7;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getLogoutredirecturl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setLogoutredirecturl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Creator = 8;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp Created = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
*/
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp Disabled = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getDisabled = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
*/
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setDisabled = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.clearDisabled = function() {
  return this.setDisabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.hasDisabled = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ClientConfig Config = 11;
 * @return {?proto.brankas.rbac.v1.oauth2.ClientConfig}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.getConfig = function() {
  return /** @type{?proto.brankas.rbac.v1.oauth2.ClientConfig} */ (
    jspb.Message.getWrapperField(this, proto.brankas.rbac.v1.oauth2.ClientConfig, 11));
};


/**
 * @param {?proto.brankas.rbac.v1.oauth2.ClientConfig|undefined} value
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
*/
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client} returns this
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brankas.rbac.v1.oauth2.Oauth2Client.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.ListClientsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.ListClientsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientsList: jspb.Message.toObjectList(msg.getClientsList(),
    proto.brankas.rbac.v1.oauth2.Oauth2Client.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsResponse}
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.ListClientsResponse;
  return proto.brankas.rbac.v1.oauth2.ListClientsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.ListClientsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsResponse}
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.brankas.rbac.v1.oauth2.Oauth2Client;
      reader.readMessage(value,proto.brankas.rbac.v1.oauth2.Oauth2Client.deserializeBinaryFromReader);
      msg.addClients(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.ListClientsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.ListClientsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.brankas.rbac.v1.oauth2.Oauth2Client.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Oauth2Client Clients = 1;
 * @return {!Array<!proto.brankas.rbac.v1.oauth2.Oauth2Client>}
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.prototype.getClientsList = function() {
  return /** @type{!Array<!proto.brankas.rbac.v1.oauth2.Oauth2Client>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.brankas.rbac.v1.oauth2.Oauth2Client, 1));
};


/**
 * @param {!Array<!proto.brankas.rbac.v1.oauth2.Oauth2Client>} value
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsResponse} returns this
*/
proto.brankas.rbac.v1.oauth2.ListClientsResponse.prototype.setClientsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.brankas.rbac.v1.oauth2.Oauth2Client=} opt_value
 * @param {number=} opt_index
 * @return {!proto.brankas.rbac.v1.oauth2.Oauth2Client}
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.prototype.addClients = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.brankas.rbac.v1.oauth2.Oauth2Client, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brankas.rbac.v1.oauth2.ListClientsResponse} returns this
 */
proto.brankas.rbac.v1.oauth2.ListClientsResponse.prototype.clearClientsList = function() {
  return this.setClientsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.DisableClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.DisableClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.DisableClientRequest}
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.DisableClientRequest;
  return proto.brankas.rbac.v1.oauth2.DisableClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.DisableClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.DisableClientRequest}
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.DisableClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.DisableClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ClientID = 1;
 * @return {string}
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brankas.rbac.v1.oauth2.DisableClientRequest} returns this
 */
proto.brankas.rbac.v1.oauth2.DisableClientRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brankas.rbac.v1.oauth2.DisableClientResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brankas.rbac.v1.oauth2.DisableClientResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brankas.rbac.v1.oauth2.DisableClientResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.DisableClientResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brankas.rbac.v1.oauth2.DisableClientResponse}
 */
proto.brankas.rbac.v1.oauth2.DisableClientResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brankas.rbac.v1.oauth2.DisableClientResponse;
  return proto.brankas.rbac.v1.oauth2.DisableClientResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brankas.rbac.v1.oauth2.DisableClientResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brankas.rbac.v1.oauth2.DisableClientResponse}
 */
proto.brankas.rbac.v1.oauth2.DisableClientResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brankas.rbac.v1.oauth2.DisableClientResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brankas.rbac.v1.oauth2.DisableClientResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brankas.rbac.v1.oauth2.DisableClientResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brankas.rbac.v1.oauth2.DisableClientResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.brankas.rbac.v1.oauth2.ClientType = {
  PRIVATE: 0,
  PUBLIC: 1
};

goog.object.extend(exports, proto.brankas.rbac.v1.oauth2);
