// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: brank.as/petnet/gunk/dsa/v1/fees/all.proto

package fees

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeeStatus int32

const (
	FeeStatus_UnknownFeeStatus FeeStatus = 0
	FeeStatus_Active           FeeStatus = 1
	FeeStatus_Disabled         FeeStatus = 2
)

// Enum value maps for FeeStatus.
var (
	FeeStatus_name = map[int32]string{
		0: "UnknownFeeStatus",
		1: "Active",
		2: "Disabled",
	}
	FeeStatus_value = map[string]int32{
		"UnknownFeeStatus": 0,
		"Active":           1,
		"Disabled":         2,
	}
)

func (x FeeStatus) Enum() *FeeStatus {
	p := new(FeeStatus)
	*p = x
	return p
}

func (x FeeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_enumTypes[0].Descriptor()
}

func (FeeStatus) Type() protoreflect.EnumType {
	return &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_enumTypes[0]
}

func (x FeeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeeStatus.Descriptor instead.
func (FeeStatus) EnumDescriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{0}
}

type Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string `protobuf:"bytes,1,opt,name=Currency,proto3" json:"Currency,omitempty"`
	Amount   string `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *Amount) Reset() {
	*x = Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{0}
}

func (x *Amount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Amount) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type DSAFeeSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string                 `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	OrgID   string                 `protobuf:"bytes,2,opt,name=OrgID,json=org_id,proto3" json:"org_id,omitempty"`
	Fees    *FeeSchedule           `protobuf:"bytes,3,opt,name=Fees,json=fees,proto3" json:"fees,omitempty"`
	Created *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=Created,json=created,proto3" json:"created,omitempty"`
	Updated *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=Updated,json=updated,proto3" json:"updated,omitempty"`
	Deleted *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=Deleted,json=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DSAFeeSchedule) Reset() {
	*x = DSAFeeSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DSAFeeSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DSAFeeSchedule) ProtoMessage() {}

func (x *DSAFeeSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DSAFeeSchedule.ProtoReflect.Descriptor instead.
func (*DSAFeeSchedule) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{1}
}

func (x *DSAFeeSchedule) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DSAFeeSchedule) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

func (x *DSAFeeSchedule) GetFees() *FeeSchedule {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *DSAFeeSchedule) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *DSAFeeSchedule) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *DSAFeeSchedule) GetDeleted() *timestamppb.Timestamp {
	if x != nil {
		return x.Deleted
	}
	return nil
}

type FeeSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    FeeStatus              `protobuf:"varint,1,opt,name=Status,json=fee_status,proto3,enum=petnet.v1.fees.FeeStatus" json:"fee_status,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StartDate,json=start_date,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=EndDate,json=end_date,proto3" json:"end_date,omitempty"`
	Updated   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=Updated,json=updated,proto3" json:"updated,omitempty"`
	Rates     []*FeeRate             `protobuf:"bytes,5,rep,name=Rates,json=rates,proto3" json:"rates,omitempty"`
}

func (x *FeeSchedule) Reset() {
	*x = FeeSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeSchedule) ProtoMessage() {}

func (x *FeeSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeSchedule.ProtoReflect.Descriptor instead.
func (*FeeSchedule) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{2}
}

func (x *FeeSchedule) GetStatus() FeeStatus {
	if x != nil {
		return x.Status
	}
	return FeeStatus_UnknownFeeStatus
}

func (x *FeeSchedule) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *FeeSchedule) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *FeeSchedule) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *FeeSchedule) GetRates() []*FeeRate {
	if x != nil {
		return x.Rates
	}
	return nil
}

type FeeRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinVolume      string  `protobuf:"bytes,1,opt,name=MinVolume,proto3" json:"MinVolume,omitempty"`
	MaxVolume      string  `protobuf:"bytes,2,opt,name=MaxVolume,proto3" json:"MaxVolume,omitempty"`
	TxnRate        string  `protobuf:"bytes,3,opt,name=TxnRate,proto3" json:"TxnRate,omitempty"`
	TxnFee         *Amount `protobuf:"bytes,4,opt,name=TxnFee,proto3" json:"TxnFee,omitempty"`
	CommissionRate string  `protobuf:"bytes,5,opt,name=CommissionRate,proto3" json:"CommissionRate,omitempty"`
	CommissionFee  *Amount `protobuf:"bytes,6,opt,name=CommissionFee,proto3" json:"CommissionFee,omitempty"`
}

func (x *FeeRate) Reset() {
	*x = FeeRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeRate) ProtoMessage() {}

func (x *FeeRate) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeRate.ProtoReflect.Descriptor instead.
func (*FeeRate) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{3}
}

func (x *FeeRate) GetMinVolume() string {
	if x != nil {
		return x.MinVolume
	}
	return ""
}

func (x *FeeRate) GetMaxVolume() string {
	if x != nil {
		return x.MaxVolume
	}
	return ""
}

func (x *FeeRate) GetTxnRate() string {
	if x != nil {
		return x.TxnRate
	}
	return ""
}

func (x *FeeRate) GetTxnFee() *Amount {
	if x != nil {
		return x.TxnFee
	}
	return nil
}

func (x *FeeRate) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *FeeRate) GetCommissionFee() *Amount {
	if x != nil {
		return x.CommissionFee
	}
	return nil
}

type UpsertFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fees *DSAFeeSchedule `protobuf:"bytes,1,opt,name=Fees,proto3" json:"Fees,omitempty"`
}

func (x *UpsertFeesRequest) Reset() {
	*x = UpsertFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertFeesRequest) ProtoMessage() {}

func (x *UpsertFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertFeesRequest.ProtoReflect.Descriptor instead.
func (*UpsertFeesRequest) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertFeesRequest) GetFees() *DSAFeeSchedule {
	if x != nil {
		return x.Fees
	}
	return nil
}

type UpsertFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *UpsertFeesResponse) Reset() {
	*x = UpsertFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertFeesResponse) ProtoMessage() {}

func (x *UpsertFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertFeesResponse.ProtoReflect.Descriptor instead.
func (*UpsertFeesResponse) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertFeesResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	After  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=After,proto3" json:"After,omitempty"`
	Before *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=Before,proto3" json:"Before,omitempty"`
}

func (x *GetFeesRequest) Reset() {
	*x = GetFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeesRequest) ProtoMessage() {}

func (x *GetFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeesRequest.ProtoReflect.Descriptor instead.
func (*GetFeesRequest) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{6}
}

func (x *GetFeesRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GetFeesRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *GetFeesRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

type GetFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fees []*DSAFeeSchedule `protobuf:"bytes,1,rep,name=Fees,proto3" json:"Fees,omitempty"`
}

func (x *GetFeesResponse) Reset() {
	*x = GetFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeesResponse) ProtoMessage() {}

func (x *GetFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeesResponse.ProtoReflect.Descriptor instead.
func (*GetFeesResponse) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeesResponse) GetFees() []*DSAFeeSchedule {
	if x != nil {
		return x.Fees
	}
	return nil
}

var File_brank_as_petnet_gunk_dsa_v1_fees_all_proto protoreflect.FileDescriptor

var file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x62, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x73, 0x2f, 0x70, 0x65, 0x74, 0x6e, 0x65,
	0x74, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x64, 0x73, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65,
	0x65, 0x73, 0x2f, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x65,
	0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x12, 0x1a, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a,
	0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xda, 0x02, 0x0a, 0x0e, 0x44, 0x53, 0x41, 0x46,
	0x65, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x04, 0x46, 0x65, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x3a, 0x06, 0x08, 0x00,
	0x10, 0x00, 0x18, 0x00, 0x22, 0xdf, 0x02, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x66, 0x65, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x41,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x40, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66,
	0x65, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x06,
	0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xff, 0x01, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x12, 0x1d, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x12, 0x1b, 0x0a, 0x07, 0x54, 0x78, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x32, 0x0a,
	0x06, 0x54, 0x78, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x12, 0x22, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x39, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x55, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x04, 0x46, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x65,
	0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x44, 0x53, 0x41,
	0x46, 0x65, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22,
	0x34, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08,
	0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x9f, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x12, 0x35, 0x0a, 0x05, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a,
	0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x46, 0x65,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x74, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x44, 0x53, 0x41, 0x46, 0x65, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x2a, 0x4b, 0x0a, 0x09,
	0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x10, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x1a,
	0x02, 0x08, 0x00, 0x12, 0x0e, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x1a,
	0x02, 0x08, 0x00, 0x12, 0x10, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x02, 0x1a, 0x02, 0x08, 0x00, 0x1a, 0x02, 0x18, 0x00, 0x32, 0x9c, 0x06, 0x0a, 0x0e, 0x4f, 0x72,
	0x67, 0x46, 0x65, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8f, 0x03, 0x0a,
	0x0a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x46, 0x65, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x65,
	0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb5, 0x02, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x92, 0x41, 0x8b, 0x02, 0x0a,
	0x08, 0x4f, 0x72, 0x67, 0x20, 0x46, 0x65, 0x65, 0x73, 0x12, 0x10, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x20, 0x6f, 0x72, 0x67, 0x20, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x1a, 0x1d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x6f, 0x72, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x6e,
	0x20, 0x6f, 0x72, 0x67, 0x20, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x4a, 0x54, 0x0a, 0x03, 0x32, 0x30,
	0x30, 0x12, 0x4d, 0x0a, 0x1e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x64, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c,
	0x6c, 0x79, 0x2e, 0x12, 0x2b, 0x0a, 0x29, 0x1a, 0x27, 0x23, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x46, 0x65, 0x65, 0x73, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4a, 0x39, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x32, 0x0a, 0x30, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x20, 0x6f, 0x72,
	0x20, 0x6d, 0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x2e, 0x4a, 0x3d, 0x0a, 0x03, 0x34,
	0x30, 0x31, 0x12, 0x36, 0x0a, 0x34, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77,
	0x68, 0x65, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x3a, 0x01, 0x2a, 0x1a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x73, 0x61, 0x66, 0x65, 0x65, 0x73,
	0x2f, 0x7b, 0x46, 0x65, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0xf2,
	0x02, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x65, 0x74,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x65, 0x74,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x02, 0x88, 0x02,
	0x00, 0x90, 0x02, 0x00, 0x92, 0x41, 0x84, 0x02, 0x0a, 0x08, 0x4f, 0x72, 0x67, 0x20, 0x46, 0x65,
	0x65, 0x73, 0x12, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x72, 0x67, 0x20, 0x66, 0x65, 0x65,
	0x73, 0x73, 0x2e, 0x1a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x67, 0x20, 0x66, 0x65, 0x65, 0x73, 0x2e, 0x4a,
	0x51, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x4a, 0x0a, 0x1e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x20, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x2e, 0x12, 0x28, 0x0a, 0x26, 0x1a, 0x24, 0x23, 0x2f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x46,
	0x65, 0x65, 0x73, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4a, 0x39, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x32, 0x0a, 0x30, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x20,
	0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x2e, 0x4a, 0x3d, 0x0a,
	0x03, 0x34, 0x30, 0x31, 0x12, 0x36, 0x0a, 0x34, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x66, 0x65, 0x65, 0x73, 0x28,
	0x00, 0x30, 0x00, 0x1a, 0x03, 0x88, 0x02, 0x00, 0x42, 0x40, 0x48, 0x01, 0x50, 0x00, 0x5a, 0x25,
	0x62, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x73, 0x2f, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2f,
	0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x64, 0x73, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x73,
	0x3b, 0x66, 0x65, 0x65, 0x73, 0x80, 0x01, 0x00, 0x88, 0x01, 0x00, 0x90, 0x01, 0x00, 0xb8, 0x01,
	0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01, 0x01, 0xd0, 0x02, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescOnce sync.Once
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescData = file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDesc
)

func file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescGZIP() []byte {
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescOnce.Do(func() {
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescData)
	})
	return file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDescData
}

var (
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes  = make([]protoimpl.MessageInfo, 8)
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_goTypes   = []interface{}{
		(FeeStatus)(0),                // 0: petnet.v1.fees.FeeStatus
		(*Amount)(nil),                // 1: petnet.v1.fees.Amount
		(*DSAFeeSchedule)(nil),        // 2: petnet.v1.fees.DSAFeeSchedule
		(*FeeSchedule)(nil),           // 3: petnet.v1.fees.FeeSchedule
		(*FeeRate)(nil),               // 4: petnet.v1.fees.FeeRate
		(*UpsertFeesRequest)(nil),     // 5: petnet.v1.fees.UpsertFeesRequest
		(*UpsertFeesResponse)(nil),    // 6: petnet.v1.fees.UpsertFeesResponse
		(*GetFeesRequest)(nil),        // 7: petnet.v1.fees.GetFeesRequest
		(*GetFeesResponse)(nil),       // 8: petnet.v1.fees.GetFeesResponse
		(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	}
)

var file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_depIdxs = []int32{
	3,  // 0: petnet.v1.fees.DSAFeeSchedule.Fees:type_name -> petnet.v1.fees.FeeSchedule
	9,  // 1: petnet.v1.fees.DSAFeeSchedule.Created:type_name -> google.protobuf.Timestamp
	9,  // 2: petnet.v1.fees.DSAFeeSchedule.Updated:type_name -> google.protobuf.Timestamp
	9,  // 3: petnet.v1.fees.DSAFeeSchedule.Deleted:type_name -> google.protobuf.Timestamp
	0,  // 4: petnet.v1.fees.FeeSchedule.Status:type_name -> petnet.v1.fees.FeeStatus
	9,  // 5: petnet.v1.fees.FeeSchedule.StartDate:type_name -> google.protobuf.Timestamp
	9,  // 6: petnet.v1.fees.FeeSchedule.EndDate:type_name -> google.protobuf.Timestamp
	9,  // 7: petnet.v1.fees.FeeSchedule.Updated:type_name -> google.protobuf.Timestamp
	4,  // 8: petnet.v1.fees.FeeSchedule.Rates:type_name -> petnet.v1.fees.FeeRate
	1,  // 9: petnet.v1.fees.FeeRate.TxnFee:type_name -> petnet.v1.fees.Amount
	1,  // 10: petnet.v1.fees.FeeRate.CommissionFee:type_name -> petnet.v1.fees.Amount
	2,  // 11: petnet.v1.fees.UpsertFeesRequest.Fees:type_name -> petnet.v1.fees.DSAFeeSchedule
	9,  // 12: petnet.v1.fees.GetFeesRequest.After:type_name -> google.protobuf.Timestamp
	9,  // 13: petnet.v1.fees.GetFeesRequest.Before:type_name -> google.protobuf.Timestamp
	2,  // 14: petnet.v1.fees.GetFeesResponse.Fees:type_name -> petnet.v1.fees.DSAFeeSchedule
	5,  // 15: petnet.v1.fees.OrgFeesService.UpsertFees:input_type -> petnet.v1.fees.UpsertFeesRequest
	7,  // 16: petnet.v1.fees.OrgFeesService.GetFees:input_type -> petnet.v1.fees.GetFeesRequest
	6,  // 17: petnet.v1.fees.OrgFeesService.UpsertFees:output_type -> petnet.v1.fees.UpsertFeesResponse
	8,  // 18: petnet.v1.fees.OrgFeesService.GetFees:output_type -> petnet.v1.fees.GetFeesResponse
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_init() }
func file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_init() {
	if File_brank_as_petnet_gunk_dsa_v1_fees_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DSAFeeSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_goTypes,
		DependencyIndexes: file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_depIdxs,
		EnumInfos:         file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_enumTypes,
		MessageInfos:      file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_msgTypes,
	}.Build()
	File_brank_as_petnet_gunk_dsa_v1_fees_all_proto = out.File
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_rawDesc = nil
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_goTypes = nil
	file_brank_as_petnet_gunk_dsa_v1_fees_all_proto_depIdxs = nil
}
