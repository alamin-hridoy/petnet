// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: brank.as/petnet/gunk/v1/mfa/all.proto

package mfa

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MFA int32

const (
	MFA_PASS     MFA = 0
	MFA_TOTP     MFA = 1
	MFA_CODE     MFA = 2
	MFA_SMS      MFA = 3
	MFA_RECOVERY MFA = 4
	MFA_EMAIL    MFA = 5
)

// Enum value maps for MFA.
var (
	MFA_name = map[int32]string{
		0: "PASS",
		1: "TOTP",
		2: "CODE",
		3: "SMS",
		4: "RECOVERY",
		5: "EMAIL",
	}
	MFA_value = map[string]int32{
		"PASS":     0,
		"TOTP":     1,
		"CODE":     2,
		"SMS":      3,
		"RECOVERY": 4,
		"EMAIL":    5,
	}
)

func (x MFA) Enum() *MFA {
	p := new(MFA)
	*p = x
	return p
}

func (x MFA) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MFA) Descriptor() protoreflect.EnumDescriptor {
	return file_brank_as_petnet_gunk_v1_mfa_all_proto_enumTypes[0].Descriptor()
}

func (MFA) Type() protoreflect.EnumType {
	return &file_brank_as_petnet_gunk_v1_mfa_all_proto_enumTypes[0]
}

func (x MFA) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MFA.Descriptor instead.
func (MFA) EnumDescriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescGZIP(), []int{0}
}

type EnableMFARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,json=user_id,proto3" json:"user_id,omitempty"`
	Type   MFA    `protobuf:"varint,2,opt,name=Type,json=type,proto3,enum=petnet.v1.mfa.MFA" json:"type,omitempty"`
	Source string `protobuf:"bytes,3,opt,name=Source,json=source,proto3" json:"source,omitempty"`
}

func (x *EnableMFARequest) Reset() {
	*x = EnableMFARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableMFARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableMFARequest) ProtoMessage() {}

func (x *EnableMFARequest) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableMFARequest.ProtoReflect.Descriptor instead.
func (*EnableMFARequest) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescGZIP(), []int{0}
}

func (x *EnableMFARequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *EnableMFARequest) GetType() MFA {
	if x != nil {
		return x.Type
	}
	return MFA_PASS
}

func (x *EnableMFARequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type EnableMFAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string   `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	InitializeCode string   `protobuf:"bytes,2,opt,name=InitializeCode,json=initialize_code,proto3" json:"initialize_code,omitempty"`
	EventID        string   `protobuf:"bytes,3,opt,name=EventID,json=event_id,proto3" json:"event_id,omitempty"`
	Codes          []string `protobuf:"bytes,4,rep,name=Codes,json=codes,proto3" json:"codes,omitempty"`
}

func (x *EnableMFAResponse) Reset() {
	*x = EnableMFAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableMFAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableMFAResponse) ProtoMessage() {}

func (x *EnableMFAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableMFAResponse.ProtoReflect.Descriptor instead.
func (*EnableMFAResponse) Descriptor() ([]byte, []int) {
	return file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescGZIP(), []int{1}
}

func (x *EnableMFAResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *EnableMFAResponse) GetInitializeCode() string {
	if x != nil {
		return x.InitializeCode
	}
	return ""
}

func (x *EnableMFAResponse) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *EnableMFAResponse) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

var File_brank_as_petnet_gunk_v1_mfa_all_proto protoreflect.FileDescriptor

var file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x73, 0x2f, 0x70, 0x65, 0x74, 0x6e, 0x65,
	0x74, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x66, 0x61, 0x2f, 0x61, 0x6c,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x66, 0x61, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x46, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70,
	0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x66, 0x61, 0x2e, 0x4d, 0x46, 0x41,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xb5,
	0x01, 0x0a, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x46, 0x41, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x0e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x05,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x3a, 0x06,
	0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x2a, 0x61, 0x0a, 0x03, 0x4d, 0x46, 0x41, 0x12, 0x0c, 0x0a,
	0x04, 0x50, 0x41, 0x53, 0x53, 0x10, 0x00, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x0c, 0x0a, 0x04, 0x54,
	0x4f, 0x54, 0x50, 0x10, 0x01, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x0c, 0x0a, 0x04, 0x43, 0x4f, 0x44,
	0x45, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x0b, 0x0a, 0x03, 0x53, 0x4d, 0x53, 0x10, 0x03,
	0x1a, 0x02, 0x08, 0x00, 0x12, 0x10, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59,
	0x10, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x0d, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10,
	0x05, 0x1a, 0x02, 0x08, 0x00, 0x1a, 0x02, 0x18, 0x00, 0x32, 0xa8, 0x03, 0x0a, 0x0a, 0x4d, 0x46,
	0x41, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x94, 0x03, 0x0a, 0x09, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x4d, 0x46, 0x41, 0x12, 0x1f, 0x2e, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x66, 0x61, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x46, 0x41,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x66, 0x61, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x46,
	0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbf, 0x02, 0x88, 0x02, 0x00, 0x90,
	0x02, 0x00, 0x92, 0x41, 0x9a, 0x02, 0x0a, 0x03, 0x4d, 0x46, 0x41, 0x12, 0x12, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x4d, 0x46, 0x41, 0x20, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x1a,
	0x34, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x61,
	0x73, 0x20, 0x61, 0x6e, 0x20, 0x4d, 0x46, 0x41, 0x20, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65,
	0x72, 0x20, 0x49, 0x44, 0x2e, 0x4a, 0x4f, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x48, 0x0a, 0x1e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64,
	0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x2e, 0x12, 0x26,
	0x0a, 0x24, 0x1a, 0x22, 0x23, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x6d, 0x66, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x46, 0x41, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x39, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x32, 0x0a,
	0x30, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64,
	0x2e, 0x4a, 0x3d, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x36, 0x0a, 0x34, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x66, 0x61, 0x2f, 0x7b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x1a,
	0x03, 0x88, 0x02, 0x00, 0x42, 0x3a, 0x48, 0x01, 0x50, 0x00, 0x5a, 0x1f, 0x62, 0x72, 0x61, 0x6e,
	0x6b, 0x2e, 0x61, 0x73, 0x2f, 0x70, 0x65, 0x74, 0x6e, 0x65, 0x74, 0x2f, 0x67, 0x75, 0x6e, 0x6b,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x66, 0x61, 0x3b, 0x6d, 0x66, 0x61, 0x80, 0x01, 0x00, 0x88, 0x01,
	0x00, 0x90, 0x01, 0x00, 0xb8, 0x01, 0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01, 0x01, 0xd0, 0x02, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescOnce sync.Once
	file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescData = file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDesc
)

func file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescGZIP() []byte {
	file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescOnce.Do(func() {
		file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescData)
	})
	return file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDescData
}

var (
	file_brank_as_petnet_gunk_v1_mfa_all_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes  = make([]protoimpl.MessageInfo, 2)
	file_brank_as_petnet_gunk_v1_mfa_all_proto_goTypes   = []interface{}{
		(MFA)(0),                  // 0: petnet.v1.mfa.MFA
		(*EnableMFARequest)(nil),  // 1: petnet.v1.mfa.EnableMFARequest
		(*EnableMFAResponse)(nil), // 2: petnet.v1.mfa.EnableMFAResponse
	}
)

var file_brank_as_petnet_gunk_v1_mfa_all_proto_depIdxs = []int32{
	0, // 0: petnet.v1.mfa.EnableMFARequest.Type:type_name -> petnet.v1.mfa.MFA
	1, // 1: petnet.v1.mfa.MFAService.EnableMFA:input_type -> petnet.v1.mfa.EnableMFARequest
	2, // 2: petnet.v1.mfa.MFAService.EnableMFA:output_type -> petnet.v1.mfa.EnableMFAResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_brank_as_petnet_gunk_v1_mfa_all_proto_init() }
func file_brank_as_petnet_gunk_v1_mfa_all_proto_init() {
	if File_brank_as_petnet_gunk_v1_mfa_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableMFARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableMFAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brank_as_petnet_gunk_v1_mfa_all_proto_goTypes,
		DependencyIndexes: file_brank_as_petnet_gunk_v1_mfa_all_proto_depIdxs,
		EnumInfos:         file_brank_as_petnet_gunk_v1_mfa_all_proto_enumTypes,
		MessageInfos:      file_brank_as_petnet_gunk_v1_mfa_all_proto_msgTypes,
	}.Build()
	File_brank_as_petnet_gunk_v1_mfa_all_proto = out.File
	file_brank_as_petnet_gunk_v1_mfa_all_proto_rawDesc = nil
	file_brank_as_petnet_gunk_v1_mfa_all_proto_goTypes = nil
	file_brank_as_petnet_gunk_v1_mfa_all_proto_depIdxs = nil
}
