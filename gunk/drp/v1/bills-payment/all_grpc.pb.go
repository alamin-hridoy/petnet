// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package bills_payment

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BillspaymentServiceClient is the client API for BillspaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BillspaymentServiceClient interface {
	// billspayment transact.
	BPTransact(ctx context.Context, in *BPTransactRequest, opts ...grpc.CallOption) (*BPTransactResponse, error)
	// billspayment transact inquire.
	BPTransactInquire(ctx context.Context, in *BPTransactInquireRequest, opts ...grpc.CallOption) (*BPTransactInquireResponse, error)
	// billspayment validate.
	BPValidate(ctx context.Context, in *BPValidateRequest, opts ...grpc.CallOption) (*BPValidateResponse, error)
	// billspayment biller list.
	BPBillerList(ctx context.Context, in *BPBillerListRequest, opts ...grpc.CallOption) (*BPBillerListResponse, error)
	// Get Transaction List for BillsPayment
	BillsPaymentTransactList(ctx context.Context, in *BillsPaymentTransactListRequest, opts ...grpc.CallOption) (*BillsPaymentTransactListResponse, error)
}

type billspaymentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBillspaymentServiceClient(cc grpc.ClientConnInterface) BillspaymentServiceClient {
	return &billspaymentServiceClient{cc}
}

func (c *billspaymentServiceClient) BPTransact(ctx context.Context, in *BPTransactRequest, opts ...grpc.CallOption) (*BPTransactResponse, error) {
	out := new(BPTransactResponse)
	err := c.cc.Invoke(ctx, "/bills_payment.BillspaymentService/BPTransact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billspaymentServiceClient) BPTransactInquire(ctx context.Context, in *BPTransactInquireRequest, opts ...grpc.CallOption) (*BPTransactInquireResponse, error) {
	out := new(BPTransactInquireResponse)
	err := c.cc.Invoke(ctx, "/bills_payment.BillspaymentService/BPTransactInquire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billspaymentServiceClient) BPValidate(ctx context.Context, in *BPValidateRequest, opts ...grpc.CallOption) (*BPValidateResponse, error) {
	out := new(BPValidateResponse)
	err := c.cc.Invoke(ctx, "/bills_payment.BillspaymentService/BPValidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billspaymentServiceClient) BPBillerList(ctx context.Context, in *BPBillerListRequest, opts ...grpc.CallOption) (*BPBillerListResponse, error) {
	out := new(BPBillerListResponse)
	err := c.cc.Invoke(ctx, "/bills_payment.BillspaymentService/BPBillerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billspaymentServiceClient) BillsPaymentTransactList(ctx context.Context, in *BillsPaymentTransactListRequest, opts ...grpc.CallOption) (*BillsPaymentTransactListResponse, error) {
	out := new(BillsPaymentTransactListResponse)
	err := c.cc.Invoke(ctx, "/bills_payment.BillspaymentService/BillsPaymentTransactList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillspaymentServiceServer is the server API for BillspaymentService service.
// All implementations must embed UnimplementedBillspaymentServiceServer
// for forward compatibility
type BillspaymentServiceServer interface {
	// billspayment transact.
	BPTransact(context.Context, *BPTransactRequest) (*BPTransactResponse, error)
	// billspayment transact inquire.
	BPTransactInquire(context.Context, *BPTransactInquireRequest) (*BPTransactInquireResponse, error)
	// billspayment validate.
	BPValidate(context.Context, *BPValidateRequest) (*BPValidateResponse, error)
	// billspayment biller list.
	BPBillerList(context.Context, *BPBillerListRequest) (*BPBillerListResponse, error)
	// Get Transaction List for BillsPayment
	BillsPaymentTransactList(context.Context, *BillsPaymentTransactListRequest) (*BillsPaymentTransactListResponse, error)
	mustEmbedUnimplementedBillspaymentServiceServer()
}

// UnimplementedBillspaymentServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBillspaymentServiceServer struct{}

func (UnimplementedBillspaymentServiceServer) BPTransact(context.Context, *BPTransactRequest) (*BPTransactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BPTransact not implemented")
}

func (UnimplementedBillspaymentServiceServer) BPTransactInquire(context.Context, *BPTransactInquireRequest) (*BPTransactInquireResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BPTransactInquire not implemented")
}

func (UnimplementedBillspaymentServiceServer) BPValidate(context.Context, *BPValidateRequest) (*BPValidateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BPValidate not implemented")
}

func (UnimplementedBillspaymentServiceServer) BPBillerList(context.Context, *BPBillerListRequest) (*BPBillerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BPBillerList not implemented")
}

func (UnimplementedBillspaymentServiceServer) BillsPaymentTransactList(context.Context, *BillsPaymentTransactListRequest) (*BillsPaymentTransactListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillsPaymentTransactList not implemented")
}
func (UnimplementedBillspaymentServiceServer) mustEmbedUnimplementedBillspaymentServiceServer() {}

// UnsafeBillspaymentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BillspaymentServiceServer will
// result in compilation errors.
type UnsafeBillspaymentServiceServer interface {
	mustEmbedUnimplementedBillspaymentServiceServer()
}

func RegisterBillspaymentServiceServer(s grpc.ServiceRegistrar, srv BillspaymentServiceServer) {
	s.RegisterService(&BillspaymentService_ServiceDesc, srv)
}

func _BillspaymentService_BPTransact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BPTransactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillspaymentServiceServer).BPTransact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bills_payment.BillspaymentService/BPTransact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillspaymentServiceServer).BPTransact(ctx, req.(*BPTransactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillspaymentService_BPTransactInquire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BPTransactInquireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillspaymentServiceServer).BPTransactInquire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bills_payment.BillspaymentService/BPTransactInquire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillspaymentServiceServer).BPTransactInquire(ctx, req.(*BPTransactInquireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillspaymentService_BPValidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BPValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillspaymentServiceServer).BPValidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bills_payment.BillspaymentService/BPValidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillspaymentServiceServer).BPValidate(ctx, req.(*BPValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillspaymentService_BPBillerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BPBillerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillspaymentServiceServer).BPBillerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bills_payment.BillspaymentService/BPBillerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillspaymentServiceServer).BPBillerList(ctx, req.(*BPBillerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillspaymentService_BillsPaymentTransactList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BillsPaymentTransactListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillspaymentServiceServer).BillsPaymentTransactList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bills_payment.BillspaymentService/BillsPaymentTransactList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillspaymentServiceServer).BillsPaymentTransactList(ctx, req.(*BillsPaymentTransactListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BillspaymentService_ServiceDesc is the grpc.ServiceDesc for BillspaymentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BillspaymentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bills_payment.BillspaymentService",
	HandlerType: (*BillspaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BPTransact",
			Handler:    _BillspaymentService_BPTransact_Handler,
		},
		{
			MethodName: "BPTransactInquire",
			Handler:    _BillspaymentService_BPTransactInquire_Handler,
		},
		{
			MethodName: "BPValidate",
			Handler:    _BillspaymentService_BPValidate_Handler,
		},
		{
			MethodName: "BPBillerList",
			Handler:    _BillspaymentService_BPBillerList_Handler,
		},
		{
			MethodName: "BillsPaymentTransactList",
			Handler:    _BillspaymentService_BillsPaymentTransactList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "brank.as/petnet/gunk/drp/v1/bills-payment/all.proto",
}
