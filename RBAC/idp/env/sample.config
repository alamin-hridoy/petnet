[runtime]
environment="development"
loglevel="info"

[server]
host="127.0.0.1"
port="3000"
certs="./env/certs"
certProvider="none"
assetsDir="./assets"
templatesDir="./templates"
csrfAuthKey=""
rememberFor="86400"
cookieStoreSecret="08SY058118B4DN7adZr5a77Omvp6v1vA"
cookieMaxAge="600"
writeTimeout="5s"

[auth]
clientID=""
clientSecret=""
url=""

[hydra]
adminURL="http://hydra-admin:4445"
publicURL="http://hydra-public:4444"

[login]
url="http://127.0.0.1:8088/login"
retries=0

[site]
url="https://127.0.0.1:3000"
errorURL="https://127.0.0.1:3000"

[smtp]
host="smtp.gmail.com"
port="587"
username="address@change.me"
password=""
fromAddr="address@change.me"

[consent]
host=""
dialtimeout="10s"

[authenticator]
names="dummy"
default="dummy"
dialtimeout="10s"

[authenticator.usermgm]
type="usermgm"
api="127.0.0.1:3001"
internal="127.0.0.1:3030"
duration="24h"

[authenticator.profile]
type="session"
host="usermgm-admin:80"
duration="90d"

[project]
name="RBAC"

[handler]
disableSignup="false"

[tmpl]
login="login.html"
otp="otp.html"
consent="consent.html"
logout="logout.html"
setPassword="set-password.html"
setPasswordSuccess="set-password-success.html"
forgotPassword="forgot-password.html"
forgotPasswordConfirmation="forgot-password-confirmation.html"
confirmEmail="confirm-email.html"
error="error.html"
registerPersonalInfo="register-personal-info.html"
signup="signup.html"

[trace]
collectorHost=""

[grpc]
# Maximum number for client to retry a call if it encounter "ResourceExhausted"
# or "Unavailable" gRPC codes.
# Set to 0 to disable.
# 5th retry starting from 100ms is 1.6ms
# See https://github.com/grpc-ecosystem/go-grpc-middleware/blob/v1.3.0/retry/backoff.go#L31
retryMax="35"

# Base interval between each retry. We use exponential backoff strategy which
# will double the interval for each retry.
retryInterval="100ms"
