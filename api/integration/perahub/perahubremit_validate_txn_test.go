package perahub

import (
	"context"
	"encoding/json"
	"testing"
	"time"

	"github.com/google/go-cmp/cmp"
)

func TestPerahubRemitValidate(t *testing.T) {
	t.Parallel()

	st := newTestStorage(t)
	tests := []struct {
		name        string
		in          PerahubRemitValidateRequest
		expectedReq PerahubRemitValidateRequest
		want        *PerahubRemitValidateResponseBody
		wantErr     bool
	}{
		{
			name: "Success",
			in: PerahubRemitValidateRequest{
				LocationID:         "371",
				UserID:             "5188",
				TrxDate:            "",
				CurrencyID:         "1",
				RemcoID:            "25",
				TrxType:            "2",
				IsDomestic:         "1",
				CustomerID:         "6925902",
				ControlNumber:      "PH1655176065",
				ClientReferenceNo:  "",
				CustomerName:       "Soto, Blanche, G",
				SenderName:         "Sauer, Mittie, O",
				ReceiverName:       "Soto, Blanche, G",
				PrincipalAmount:    179,
				ServiceCharge:      "50",
				DstAmount:          "1",
				TotalAmount:        "229",
				McRate:             "1",
				BuyBackAmount:      "1",
				RateCategory:       "OPTIONAL",
				McRateID:           "1",
				OriginatingCountry: "PH",
				DestinationCountry: "PH",
				PurposeTransaction: "REQUIRED",
				SourceFund:         "REQUIRED",
				Occupation:         "EMPLOYED",
				RelationTo:         "REQUIRED",
				BirthPlace:         "MANILA",
				BirthCountry:       "PH",
				IDType:             "PASSPORT",
				IDNumber:           "0001292",
				Address:            "ADDRESS",
				Barangay:           "Barangay 1",
				City:               "MANILA",
				Province:           "METRO MANILA",
				ZipCode:            "1013",
				Country:            "PH",
				ContactNumber:      "09999999999",
				FormType:           "OPTIONAL",
				FormNumber:         "OPTIONAL",
				PayoutType:         "1",
				RemoteLocationID:   "1",
				RemoteUserID:       "1",
				RemoteIPAddress:    "OPTIONAL",
				IPAddress:          "OPTIONAL",
				ReferenceNumber:    "0",
				CurrentAddress: PerahubRemitAddress{
					Address1: "Marcos Highway",
					Barangay: "Barangay 1",
					City:     "MANILA",
					Province: "METRO MANILA",
					ZipCode:  "1013",
					Country:  "PH",
				},
				PermanentAddress: PerahubRemitAddress{
					Address1: "Marcos Highway",
					Barangay: "Barangay 1",
					City:     "MANILA",
					Province: "METRO MANILA",
					ZipCode:  "1013",
					Country:  "PH",
				},
				SenderLastName:     "Sauer",
				SenderFirstName:    "Mittie",
				SenderMiddleName:   "O",
				ReceiverLastName:   "Soto",
				ReceiverFirstName:  "Blanche",
				ReceiverMiddleName: "G",
				PartnerCode:        "DRP",
				DsaCode:            "TEST_DSA",
				DsaTrxType:         "digital",
			},
			expectedReq: PerahubRemitValidateRequest{
				LocationID:         "371",
				UserID:             "5188",
				TrxDate:            "",
				CurrencyID:         "1",
				RemcoID:            "25",
				TrxType:            "2",
				IsDomestic:         "1",
				CustomerID:         "6925902",
				ControlNumber:      "PH1655176065",
				ClientReferenceNo:  "",
				CustomerName:       "Soto, Blanche, G",
				SenderName:         "Sauer, Mittie, O",
				ReceiverName:       "Soto, Blanche, G",
				PrincipalAmount:    179,
				ServiceCharge:      "50",
				DstAmount:          "1",
				TotalAmount:        "229",
				McRate:             "1",
				BuyBackAmount:      "1",
				RateCategory:       "OPTIONAL",
				McRateID:           "1",
				OriginatingCountry: "PH",
				DestinationCountry: "PH",
				PurposeTransaction: "REQUIRED",
				SourceFund:         "REQUIRED",
				Occupation:         "EMPLOYED",
				RelationTo:         "REQUIRED",
				BirthPlace:         "MANILA",
				BirthCountry:       "PH",
				IDType:             "PASSPORT",
				IDNumber:           "0001292",
				Address:            "ADDRESS",
				Barangay:           "Barangay 1",
				City:               "MANILA",
				Province:           "METRO MANILA",
				ZipCode:            "1013",
				Country:            "PH",
				ContactNumber:      "09999999999",
				FormType:           "OPTIONAL",
				FormNumber:         "OPTIONAL",
				PayoutType:         "1",
				RemoteLocationID:   "1",
				RemoteUserID:       "1",
				RemoteIPAddress:    "OPTIONAL",
				IPAddress:          "OPTIONAL",
				ReferenceNumber:    "0",
				CurrentAddress: PerahubRemitAddress{
					Address1: "Marcos Highway",
					Barangay: "Barangay 1",
					City:     "MANILA",
					Province: "METRO MANILA",
					ZipCode:  "1013",
					Country:  "PH",
				},
				PermanentAddress: PerahubRemitAddress{
					Address1: "Marcos Highway",
					Barangay: "Barangay 1",
					City:     "MANILA",
					Province: "METRO MANILA",
					ZipCode:  "1013",
					Country:  "PH",
				},
				SenderLastName:     "Sauer",
				SenderFirstName:    "Mittie",
				SenderMiddleName:   "O",
				ReceiverLastName:   "Soto",
				ReceiverFirstName:  "Blanche",
				ReceiverMiddleName: "G",
				PartnerCode:        "DRP",
				DsaCode:            "TEST_DSA",
				DsaTrxType:         "digital",
			},
			want: &PerahubRemitValidateResponseBody{
				Code:    "200",
				Message: "Good",
				Result: PerahubRemitValidateResult{
					LocationID:         0,
					UserID:             "5188",
					TrxDate:            "2022-06-15",
					CurrencyID:         "1",
					RemcoID:            "25",
					TrxType:            "2",
					IsDomestic:         "1",
					CustomerID:         "6925902",
					ControlNumber:      "PH1655176065",
					ClientReferenceNo:  "U306WYJXYCPF18",
					CustomerName:       "Soto, Blanche, G",
					SenderName:         "Sauer, Mittie, O",
					ReceiverName:       "Soto, Blanche, G",
					PrincipalAmount:    179,
					ServiceCharge:      "50",
					DstAmount:          "1",
					TotalAmount:        "229",
					McRate:             "1",
					BuyBackAmount:      "1",
					RateCategory:       "OPTIONAL",
					McRateID:           "1",
					OriginatingCountry: "PH",
					DestinationCountry: "PH",
					PurposeTransaction: "REQUIRED",
					SourceFund:         "REQUIRED",
					Occupation:         "EMPLOYED",
					RelationTo:         "REQUIRED",
					BirthPlace:         "MANILA",
					BirthCountry:       "PH",
					IDType:             "PASSPORT",
					IDNumber:           "0001292",
					Address:            "ADDRESS",
					Barangay:           "Barangay 1",
					City:               "MANILA",
					Province:           "METRO MANILA",
					ZipCode:            "1013",
					Country:            "PH",
					ContactNumber:      "09999999999",
					FormType:           "OPTIONAL",
					FormNumber:         "OPTIONAL",
					PayoutType:         "1",
					RemoteLocationID:   "1",
					RemoteUserID:       "1",
					RemoteIPAddress:    "OPTIONAL",
					IPAddress:          "OPTIONAL",
					ReferenceNumber:    "796e98e940b5982ffa5cee4f89816ad8",
					CurrentAddress: PerahubRemitAddress{
						Address1: "Marcos Highway",
						Barangay: "Barangay 1",
						City:     "MANILA",
						Province: "METRO MANILA",
						ZipCode:  "1013",
						Country:  "PH",
					},
					PermanentAddress: PerahubRemitAddress{
						Address1: "Marcos Highway",
						Barangay: "Barangay 1",
						City:     "MANILA",
						Province: "METRO MANILA",
						ZipCode:  "1013",
						Country:  "PH",
					},
					APIRequest: PerahubRemitValidateAPIRequest{
						LocationID:         0,
						UserID:             "5188",
						TrxDate:            "2022-06-15",
						CurrencyID:         "1",
						RemcoID:            "25",
						TrxType:            "2",
						IsDomestic:         "1",
						CustomerID:         "6925902",
						ControlNumber:      "PH1655176065",
						ClientReferenceNo:  "U306WYJXYCPF18",
						CustomerName:       "Soto, Blanche, G",
						SenderName:         "Sauer, Mittie, O",
						ReceiverName:       "Soto, Blanche, G",
						PrincipalAmount:    179,
						ServiceCharge:      "50",
						DstAmount:          "1",
						TotalAmount:        "229",
						McRate:             "1",
						BuyBackAmount:      "1",
						RateCategory:       "OPTIONAL",
						McRateID:           "1",
						OriginatingCountry: "PH",
						DestinationCountry: "PH",
						PurposeTransaction: "REQUIRED",
						SourceFund:         "REQUIRED",
						Occupation:         "EMPLOYED",
						RelationTo:         "REQUIRED",
						BirthPlace:         "MANILA",
						BirthCountry:       "PH",
						IDType:             "PASSPORT",
						IDNumber:           "0001292",
						Address:            "ADDRESS",
						Barangay:           "Barangay 1",
						City:               "MANILA",
						Province:           "METRO MANILA",
						ZipCode:            "1013",
						Country:            "PH",
						ContactNumber:      "09999999999",
						FormType:           "OPTIONAL",
						FormNumber:         "OPTIONAL",
						PayoutType:         "1",
						RemoteLocationID:   "1",
						RemoteUserID:       "1",
						RemoteIPAddress:    "OPTIONAL",
						IPAddress:          "OPTIONAL",
						ReferenceNumber:    "796e98e940b5982ffa5cee4f89816ad8",
						CurrentAddress: PerahubRemitAddress{
							Address1: "Marcos Highway",
							Barangay: "Barangay 1",
							City:     "MANILA",
							Province: "METRO MANILA",
							ZipCode:  "1013",
							Country:  "PH",
						},
						PermanentAddress: PerahubRemitAddress{
							Address1: "Marcos Highway",
							Barangay: "Barangay 1",
							City:     "MANILA",
							Province: "METRO MANILA",
							ZipCode:  "1013",
							Country:  "PH",
						},
						SenderLastName:     "Sauer",
						SenderFirstName:    "Mittie",
						SenderMiddleName:   "O",
						ReceiverLastName:   "Soto",
						ReceiverFirstName:  "Blanche",
						ReceiverMiddleName: "G",
						PartnerCode:        "DRP",
					},
					UpdatedAt: time.Time{},
					CreatedAt: time.Time{},
					ID:        7461,
				},
			},
		},
	}

	for _, test := range tests {
		test := test
		t.Run(test.name, func(t *testing.T) {
			t.Parallel()

			s, m := newTestSvc(t, st)
			got, err := s.PerahubRemitValidate(context.Background(), test.in)
			if (err != nil) != test.wantErr {
				t.Errorf("PerahubRemitValidate() error = %v, wantErr %v", err, test.wantErr)
				return
			}
			var newReq PerahubRemitValidateRequest
			if err := json.Unmarshal(m.GetMockRequest(), &newReq); err != nil {
				t.Fatal(err)
			}
			if !cmp.Equal(test.expectedReq, newReq) {
				t.Error(cmp.Diff(test.expectedReq, newReq))
			}

			if !cmp.Equal(test.want, got) {
				t.Error(cmp.Diff(test.want, got))
			}
		})
	}
}
